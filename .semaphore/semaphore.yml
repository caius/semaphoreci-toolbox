version: v1.0
name: Toolbox S2 project
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

execution_time_limit:
  minutes: 10

global_job_config:
  prologue:
    commands:
      # Disconnect from cache server
      - checkout
      - bash release/create.sh

blocks:
  - name: Static Code Analysis
    dependencies: []
    task:
      prologue:
        commands:
          - sudo apt-get install shellcheck
      jobs:
        - name: ShellCheck
          commands:
            - shellcheck sem-service || true
            - shellcheck sem-version || true
            - shellcheck cache       || true
            - shellcheck libcheckout || true
            - 'shellcheck sem-service -f gcc | wc -l && [[ "$(shellcheck sem-service -f gcc | wc -l)" -le 76 ]]'
            - 'shellcheck sem-version -f gcc | wc -l && [[ "$(shellcheck sem-version -f gcc | wc -l)" -le 19 ]]'
            - 'shellcheck cache       -f gcc | wc -l && [[ "$(shellcheck cache -f gcc | wc -l)" -le 148 ]]'
            - 'shellcheck libcheckout -f gcc | wc -l && [[ "$(shellcheck libcheckout -f gcc | wc -l)" -le 89 ]]'
            - shellcheck install-package

  - name: Sem Version Tests bionic
    dependencies: []
    task:
      prologue:
        commands:
          - source release/install_in_tests.sh
      jobs:
        - name: Sem Version
          commands_file: sem-version_bionic.txt

  - name: Sem Service Tests
    dependencies: []
    task:
      prologue:
        commands:
          - source release/create.sh
          - cd ~/$SEMAPHORE_GIT_DIR/
          - source release/install_in_tests.sh
      jobs:
        - name: Sem service tests
          matrix:
            - env_var: TEST
              values:
                - mysql
                - postgres
                - redis
                - memcached
                - rabbitmq
                - mongodb
                - elasticsearch
                - cassandra
                - rethinkdb
          commands:
            - bash tests/sem_service/$TEST

  - name: 'Bats: Mac'
    dependencies: []
    task:
      agent:
        machine:
          type: a1-standard-4
          os_image: macos-xcode11

      prologue:
        commands:
          - source tests/sftp_server/start_on_mac.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local

      jobs:
        - name: 'Bats: Mac'
          matrix:
            - env_var: TEST
              values:
                - tests/macos_cache.bats
                - tests/macos_autocache.bats
                - tests/libcheckout.bats
                - tests/artifacts.bats

          commands:
            - bats --tap --timing $TEST

  - name: 'Bats: Docker'
    dependencies: []
    task:
      agent:
        machine:
          type: e1-standard-2
          os_image: ubuntu1804
        containers:
          - name: main
            image: 'semaphoreci/ruby:2.6.2'
      prologue:
        commands:
          - source tests/sftp_server/start_on_docker.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local
      jobs:
        - name: 'Bats'
          matrix:
            - env_var: TEST
              values:
                - tests/cache.bats
                - tests/libcheckout.bats
                - tests/artifacts.bats
          commands:
            - bats --tap --timing $TEST

  - name: 'Bats: Minimal Docker'
    dependencies: []
    task:
      agent:
        machine:
          type: e1-standard-2
          os_image: ubuntu1804
        containers:
          - name: main
            image: 'semaphoreci/alpine:3.9'
      prologue:
        commands:
          - apk add --update docker openrc
          - source tests/sftp_server/start_on_docker.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - ./tests/support/bats-core/install.sh /usr/local
      jobs:
        - name: 'Bats'
          matrix:
            - env_var: TEST
              values:
                - tests/cache.bats
                - tests/libcheckout.bats
                - tests/artifacts.bats
          commands:
            - bats --tap --timing $TEST

  - name: 'Bats: Linux'
    dependencies: []
    task:
      prologue:
        commands:
          - source tests/sftp_server/start_on_linux.sh
          - sudo apt-get install -y python3.8-dev
          - sem-version python 3.8
          - sem-version go 1.13
          - sem-version php 7.3.23
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local
      jobs:
        - name: 'Bats'
          matrix:
            - env_var: TEST
              values:
                - tests/install_package.bats
                - tests/autocache.bats
                - tests/cache.bats
                - tests/libcheckout.bats
                - tests/base.bats
                - tests/artifacts.bats
                - tests/compiler.bats
          commands:
            - bats --tap --timing $TEST

promotions:
  - name: Release
    pipeline_file: release.yml
    auto_promote_on:
      - result: passed
        branch:
          - ^refs/tags/v*
